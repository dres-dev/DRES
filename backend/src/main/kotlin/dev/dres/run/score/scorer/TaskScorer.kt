package dev.dres.run.score.scorer

import dev.dres.data.model.submissions.Submission
import dev.dres.data.model.template.team.TeamId
import dev.dres.run.score.Scoreable

/** Type alias for a */
typealias ScoreEntry = Triple<TeamId, String?, Double>

/**
 * A [TaskScorer] that re-computes the current scores of all teams for a given task based on the entire submission history.
 *
 * @author Luca Rossetto
 * @author Ralph Gasser
 * @version 2.0.0
 */
interface TaskScorer {

    /** The [Scoreable] this [TaskScorer] is scoring. */
    val scoreable: Scoreable

    /**
     * Returns List of [ScoreEntry]s as generated by this [TaskScorer]
     *
     * @return A [List] of [ScoreEntry]
     */
    fun scores(): List<ScoreEntry> = this.scoreMap().map { ScoreEntry(it.key, null, it.value) }

    /**
     * Returns a map of [TeamId] to score as generated by this [TaskScorer]
     *
     * @return A [Map] of [TeamId] to score value
     */
    fun scoreMap(): Map<TeamId, Double>
}