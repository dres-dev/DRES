{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "DRES API",
    "description" : "API for DRES (Distributed Retrieval Evaluation Server), Version 1.0",
    "version" : "1.0"
  },
  "paths" : {
    "/api/v1/login" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Sets roles for session based on user account and returns a session cookie.",
        "operationId" : "postApiV1Login",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDetails"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/logout" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Clears all user roles of the current session.",
        "operationId" : "getApiV1Logout",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/list" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Lists all available users.",
        "operationId" : "getApiV1UserList",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserDetails"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get information about the current user.",
        "operationId" : "getApiV1User",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDetails"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Creates a new user, if the username is not already taken. Requires ADMIN privileges",
        "operationId" : "postApiV1User",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDetails"
                }
              }
            }
          },
          "400" : {
            "description" : "If the username is already taken",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{userId}" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Gets details of the user with the given id",
        "operationId" : "getApiV1UserWithUserid",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User's UID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "If the user could not be found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "User" ],
        "summary" : "Deletes the specified user. Requires ADMIN privileges",
        "operationId" : "deleteApiV1UserWithUserid",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "If the user could not be found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "User" ],
        "summary" : "Updates the specified user, if it exists. Anyone is allowed to update their data, however only ADMINs are allowed to update anyone",
        "operationId" : "patchApiV1UserWithUserid",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDetails"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/session" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get current sessionId",
        "operationId" : "getApiV1UserSession",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionId"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/session/active/list" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get details of all current user sessions",
        "operationId" : "getApiV1UserSessionActiveList",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserDetails"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/collection/list" : {
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "Lists all available media collections with basic information about their content.",
        "operationId" : "getApiV1CollectionList",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RestMediaCollection"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/collection/{collectionId}" : {
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "Shows the content of the specified media collection.",
        "operationId" : "getApiV1CollectionWithCollectionid",
        "parameters" : [ {
          "name" : "collectionId",
          "in" : "path",
          "description" : "Collection ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestFullMediaCollection"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Collection" ],
        "summary" : "Deletes a media collection",
        "operationId" : "deleteApiV1CollectionWithCollectionid",
        "parameters" : [ {
          "name" : "collectionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/collection" : {
      "post" : {
        "tags" : [ "Collection" ],
        "summary" : "Adds a new media collection",
        "operationId" : "postApiV1Collection",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestMediaCollection"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Collection" ],
        "summary" : "Updates a media collection",
        "operationId" : "patchApiV1Collection",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestMediaCollection"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mediaItem" : {
      "post" : {
        "tags" : [ "Collection" ],
        "summary" : "Adds a Media Item to the specified Media Collection.",
        "operationId" : "postApiV1Mediaitem",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestMediaItem"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Collection" ],
        "summary" : "Updates a Media Item to the specified Media Collection.",
        "operationId" : "patchApiV1Mediaitem",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestMediaItem"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mediaItem/{mediaId}" : {
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "Selects and returns a specific media item.",
        "operationId" : "getApiV1MediaitemWithMediaid",
        "parameters" : [ {
          "name" : "mediaId",
          "in" : "path",
          "description" : "Media item ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestMediaItem"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Collection" ],
        "summary" : "Selects and returns a specific media item.",
        "operationId" : "deleteApiV1MediaitemWithMediaid",
        "parameters" : [ {
          "name" : "mediaId",
          "in" : "path",
          "description" : "Media item ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/collection/{collectionId}/random" : {
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "Selects and returns a random media item from a given media collection.",
        "operationId" : "getApiV1CollectionWithCollectionidRandom",
        "parameters" : [ {
          "name" : "collectionId",
          "in" : "path",
          "description" : "Collection ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestMediaItem"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/collection/{collectionId}/resolve" : {
      "post" : {
        "tags" : [ "Collection" ],
        "summary" : "Resolves a list of media item names to media items",
        "operationId" : "postApiV1CollectionWithCollectionidResolve",
        "parameters" : [ {
          "name" : "collectionId",
          "in" : "path",
          "description" : "Collection ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RestMediaItem"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/collection/{collectionId}/{startsWith}" : {
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "Lists media items from a given media collection whose name start with the given string.",
        "operationId" : "getApiV1CollectionWithCollectionidWithStartswith",
        "parameters" : [ {
          "name" : "collectionId",
          "in" : "path",
          "description" : "Collection ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startsWith",
          "in" : "path",
          "description" : "Name starts with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RestMediaItem"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/external/{startsWith}" : {
      "get" : {
        "tags" : [ "Collection" ],
        "summary" : "Lists items from the external media collection whose name start with the given string.",
        "operationId" : "getApiV1ExternalWithStartswith",
        "parameters" : [ {
          "name" : "startsWith",
          "in" : "path",
          "description" : "Name starts with.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/competition/list" : {
      "get" : {
        "tags" : [ "Competition" ],
        "summary" : "Lists an overview of all available competitions with basic information about their content.",
        "operationId" : "getApiV1CompetitionList",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CompetitionOverview"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/competition" : {
      "post" : {
        "tags" : [ "Competition" ],
        "summary" : "Creates a new competition.",
        "operationId" : "postApiV1Competition",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompetitionCreate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Competition" ],
        "summary" : "Updates an existing competition.",
        "operationId" : "patchApiV1Competition",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestCompetitionDescription"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/competition/{competitionId}" : {
      "get" : {
        "tags" : [ "Competition" ],
        "summary" : "Loads the detailed definition of a specific competition.",
        "operationId" : "getApiV1CompetitionWithCompetitionid",
        "parameters" : [ {
          "name" : "competitionId",
          "in" : "path",
          "description" : "Competition ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestCompetitionDescription"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Competition" ],
        "summary" : "Deletes the competition with the given competition ID.",
        "operationId" : "deleteApiV1CompetitionWithCompetitionid",
        "parameters" : [ {
          "name" : "competitionId",
          "in" : "path",
          "description" : "Competition ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/competition/{competitionId}/team/list" : {
      "get" : {
        "tags" : [ "Competition" ],
        "summary" : "Lists the Teams of a specific competition.",
        "operationId" : "getApiV1CompetitionWithCompetitionidTeamList",
        "parameters" : [ {
          "name" : "competitionId",
          "in" : "path",
          "description" : "Competition ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RestTeam"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/competition/{competitionId}/team/list/details" : {
      "get" : {
        "tags" : [ "Competition" ],
        "summary" : "Lists the teams with their user details",
        "operationId" : "getApiV1CompetitionWithCompetitionidTeamListDetails",
        "parameters" : [ {
          "name" : "competitionId",
          "in" : "path",
          "description" : "Competition ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RestDetailedTeam"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/competition/{competitionId}/task/list" : {
      "get" : {
        "tags" : [ "Competition" ],
        "summary" : "Lists the Tasks of a specific competition.",
        "operationId" : "getApiV1CompetitionWithCompetitionidTaskList",
        "parameters" : [ {
          "name" : "competitionId",
          "in" : "path",
          "description" : "Competition ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RestTaskDescription"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/submit" : {
      "get" : {
        "tags" : [ "Submission" ],
        "summary" : "Endpoint to accept submissions",
        "operationId" : "getApiV1Submit",
        "parameters" : [ {
          "name" : "collection",
          "in" : "query",
          "description" : "Collection identifier. Optional, in which case the default collection for the run will be considered.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "item",
          "in" : "query",
          "description" : "Identifier for the actual media object or media file.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "text",
          "in" : "query",
          "description" : "Text to be submitted. ONLY for tasks with target type TEXT. If this parameter is provided, it superseeds all athers.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "frame",
          "in" : "query",
          "description" : "Frame number for media with temporal progression (e.g. video).",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "shot",
          "in" : "query",
          "description" : "Shot number for media with temporal progression (e.g. video).",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "timecode",
          "in" : "query",
          "description" : "Timecode for media with temporal progression (e.g. video).",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessfulSubmissionsStatus"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessfulSubmissionsStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/log/query" : {
      "post" : {
        "tags" : [ "Log" ],
        "summary" : "Accepts query logs from participants",
        "operationId" : "postApiV1LogQuery",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryEventLog"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/log/result" : {
      "post" : {
        "tags" : [ "Log" ],
        "summary" : "Accepts result logs from participants",
        "operationId" : "postApiV1LogResult",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueryResultLog"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/info/list" : {
      "get" : {
        "tags" : [ "Competition Run" ],
        "summary" : "Lists an overview of all competition runs visible to the current user",
        "operationId" : "getApiV1RunInfoList",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RunInfo"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/state/list" : {
      "get" : {
        "tags" : [ "Competition Run" ],
        "summary" : "Lists an overview of all competition runs visible to the current user",
        "operationId" : "getApiV1RunStateList",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RunState"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/info/{runId}" : {
      "get" : {
        "tags" : [ "Competition Run" ],
        "summary" : "Returns a specific competition run.",
        "operationId" : "getApiV1RunInfoWithRunid",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RunInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/state/{runId}" : {
      "get" : {
        "tags" : [ "Competition Run" ],
        "summary" : "Returns the state of a specific competition run.",
        "operationId" : "getApiV1RunStateWithRunid",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RunState"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/{runId}/hint" : {
      "get" : {
        "tags" : [ "Competition Run" ],
        "summary" : "Returns the task hint for the current task run (i.e. the one that is currently selected).",
        "operationId" : "getApiV1RunWithRunidHint",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskHint"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/{runId}/target" : {
      "get" : {
        "tags" : [ "Competition Run" ],
        "summary" : "Returns the task target for the current task run (i.e. the one that is currently selected).",
        "operationId" : "getApiV1RunWithRunidTarget",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskTarget"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/{runId}/task" : {
      "get" : {
        "tags" : [ "Competition Run" ],
        "summary" : "Returns the information for the current task (i.e. the one that is currently selected).",
        "operationId" : "getApiV1RunWithRunidTask",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/{runId}/submission/list" : {
      "get" : {
        "tags" : [ "Competition Run" ],
        "summary" : "Returns the submissions for the current task run, if it is either running or has just ended.",
        "operationId" : "getApiV1RunWithRunidSubmissionList",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SubmissionInfo"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/ErrorStatus"
                  }, {
                    "$ref" : "#/components/schemas/ErrorStatus"
                  } ]
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/{runId}/submission/list/after/{timestamp}" : {
      "get" : {
        "tags" : [ "Competition Run" ],
        "summary" : "Returns the submissions for the current task that are newer than an indicated time, if it is either running or has just ended.",
        "operationId" : "getApiV1RunWithRunidSubmissionListAfterWithTimestamp",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timestamp",
          "in" : "path",
          "description" : "Minimum Timestamp of returned submissions.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SubmissionInfo"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/{runId}/task/{taskId}/submission/list" : {
      "get" : {
        "tags" : [ "Competition Run" ],
        "summary" : "Returns the submissions of a specific task run, regardless of whether it is currently running or has ended.",
        "operationId" : "getApiV1RunWithRunidTaskWithTaskidSubmissionList",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "Task run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SubmissionInfo"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/score/run/{runId}" : {
      "get" : {
        "tags" : [ "Competition Run Scores" ],
        "summary" : "Returns the score overviews of a specific competition run.",
        "operationId" : "getApiV1ScoreRunWithRunid",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ScoreOverview"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/score/run/{runId}/current" : {
      "get" : {
        "tags" : [ "Competition Run Scores" ],
        "summary" : "Returns the overviews of all score boards for the current task run, if it is either running or has just ended.",
        "operationId" : "getApiV1ScoreRunWithRunidCurrent",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScoreOverview"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/score/run/{runId}/history/{taskId}" : {
      "get" : {
        "tags" : [ "Competition Run Scores" ],
        "summary" : "Returns the overviews of all score boards for the specified task run.",
        "operationId" : "getApiV1ScoreRunWithRunidHistoryWithTaskid",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "Task run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScoreOverview"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/score/run/{runId}/series/{scoreboard}" : {
      "get" : {
        "tags" : [ "Competition Run Scores" ],
        "summary" : "Returns a time series for a given run and scoreboard.",
        "operationId" : "getApiV1ScoreRunWithRunidSeriesWithScoreboard",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "ID of the competition run.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scoreboard",
          "in" : "path",
          "description" : "Name of the scoreboard to return the time series for.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ScoreSeries"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/score/run/{runId}/scoreboard/list" : {
      "get" : {
        "tags" : [ "Competition Run Scores" ],
        "summary" : "Returns a list of available scoreboard names for the given run.",
        "operationId" : "getApiV1ScoreRunWithRunidScoreboardList",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "ID of the competition run.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/score/run/{runId}/teamGroup/list" : {
      "get" : {
        "tags" : [ "Competition Run Scores" ],
        "summary" : "Returns team group aggregated values of the current task.",
        "operationId" : "getApiV1ScoreRunWithRunidTeamgroupList",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "ID of the competition run.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ScoreSeries"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/admin/create" : {
      "post" : {
        "tags" : [ "Competition Run Admin" ],
        "summary" : "Creates a new competition run from an existing competition",
        "operationId" : "postApiV1RunAdminCreate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompetitionStartMessage"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/admin/{runId}/start" : {
      "post" : {
        "tags" : [ "Competition Run Admin" ],
        "summary" : "Starts a competition run. This is a method for admins.",
        "operationId" : "postApiV1RunAdminWithRunidStart",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/admin/{runId}/task/next" : {
      "post" : {
        "tags" : [ "Competition Run Admin" ],
        "summary" : "Moves to and selects the next task. This is a method for admins.",
        "operationId" : "postApiV1RunAdminWithRunidTaskNext",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/admin/{runId}/task/previous" : {
      "post" : {
        "tags" : [ "Competition Run Admin" ],
        "summary" : "Moves to and selects the previous task. This is a method for admins.",
        "operationId" : "postApiV1RunAdminWithRunidTaskPrevious",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/admin/{runId}/task/switch/{idx}" : {
      "post" : {
        "tags" : [ "Competition Run Admin" ],
        "summary" : "Moves to and selects the specified task. This is a method for admins.",
        "operationId" : "postApiV1RunAdminWithRunidTaskSwitchWithIdx",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "idx",
          "in" : "path",
          "description" : "Index of the task to switch to.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/admin/{runId}/task/start" : {
      "post" : {
        "tags" : [ "Competition Run Admin" ],
        "summary" : "Starts the currently active task as a new task run. This is a method for admins.",
        "operationId" : "postApiV1RunAdminWithRunidTaskStart",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/admin/{runId}/task/abort" : {
      "post" : {
        "tags" : [ "Competition Run Admin" ],
        "summary" : "Aborts the currently running task run. This is a method for admins.",
        "operationId" : "postApiV1RunAdminWithRunidTaskAbort",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/admin/{runId}/terminate" : {
      "post" : {
        "tags" : [ "Competition Run Admin" ],
        "summary" : "Terminates a competition run. This is a method for admins.",
        "operationId" : "postApiV1RunAdminWithRunidTerminate",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/admin/{runId}/adjust/{duration}" : {
      "post" : {
        "tags" : [ "Competition Run Admin" ],
        "summary" : "Adjusts the duration of a running task run. This is a method for admins.",
        "operationId" : "postApiV1RunAdminWithRunidAdjustWithDuration",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "duration",
          "in" : "path",
          "description" : "Duration to add.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/admin/{runId}/viewer/list" : {
      "get" : {
        "tags" : [ "Competition Run Admin" ],
        "summary" : "Lists all registered viewers for a competition run. This is a method for admins.",
        "operationId" : "getApiV1RunAdminWithRunidViewerList",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ViewerInfo"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/admin/{runId}/viewer/list/{viewerId}/force" : {
      "post" : {
        "tags" : [ "Competition Run Admin" ],
        "summary" : "Forces a viewer with the given viewer ID into the READY state. This is a method for admins.",
        "operationId" : "postApiV1RunAdminWithRunidViewerListWithVieweridForce",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "viewerId",
          "in" : "path",
          "description" : "Viewer ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/admin/{runId}/submission/list/{taskId}" : {
      "get" : {
        "tags" : [ "Competition Run Admin" ],
        "summary" : "Lists all submissions for a given task and run.",
        "operationId" : "getApiV1RunAdminWithRunidSubmissionListWithTaskid",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaskRunSubmissionInfo"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/admin/{runId}/submission/override" : {
      "patch" : {
        "tags" : [ "Competition Run Admin" ],
        "summary" : "Lists all submissions for a given task and run",
        "operationId" : "patchApiV1RunAdminWithRunidSubmissionOverride",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubmissionInfo"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubmissionInfo"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/admin/{runId}/task/past/list" : {
      "get" : {
        "tags" : [ "Competition Run Admin" ],
        "summary" : "Lists all past tasks for a given run",
        "operationId" : "getApiV1RunAdminWithRunidTaskPastList",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PastTaskInfo"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/{runId}/judge/next" : {
      "get" : {
        "tags" : [ "Judgement" ],
        "summary" : "Gets the next open Submission to be judged.",
        "operationId" : "getApiV1RunWithRunidJudgeNext",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JudgementRequest"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/{runId}/vote/next" : {
      "get" : {
        "tags" : [ "Judgement" ],
        "summary" : "Gets the next open Submission to voted on.",
        "operationId" : "getApiV1RunWithRunidVoteNext",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JudgementRequest"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/{runId}/judge" : {
      "post" : {
        "tags" : [ "Judgement" ],
        "summary" : "Returns a Judgement.",
        "operationId" : "postApiV1RunWithRunidJudge",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Judgement"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/{runId}/judge/status" : {
      "get" : {
        "tags" : [ "Judgement" ],
        "summary" : "Gets the status of all judgement validators.",
        "operationId" : "getApiV1RunWithRunidJudgeStatus",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/JudgementValidatorStatus"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/run/{runId}/judge/vote" : {
      "post" : {
        "tags" : [ "Judgement" ],
        "summary" : "Returns a Vote.",
        "operationId" : "postApiV1RunWithRunidJudgeVote",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JudgementVote"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/info" : {
      "get" : {
        "tags" : [ "Audit" ],
        "summary" : "Gives information about the audit log. Namely size and latest timestamp of known audit logs",
        "operationId" : "getApiV1AuditInfo",
        "responses" : {
          "200" : {
            "description" : "The audit log info",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuditLogInfo"
                }
              }
            }
          },
          "403" : {
            "description" : "Whenever a non-admin user starts the call",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/log/list/since/{since}/{upto}" : {
      "get" : {
        "tags" : [ "Audit" ],
        "summary" : "Lists all audit logs matching the query",
        "operationId" : "getApiV1AuditLogListSinceWithSinceWithUpto",
        "parameters" : [ {
          "name" : "since",
          "in" : "path",
          "description" : "Timestamp of the earliest audit log to include",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "upto",
          "in" : "path",
          "description" : "Timestamp of the latest audit log to include.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The audit logs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RestAuditLogEntry"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Whenever a non-admin user starts the call",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audit/log/list/limit/{limit}/{page}" : {
      "get" : {
        "tags" : [ "Audit" ],
        "summary" : "Lists all audit logs matching the query.",
        "operationId" : "getApiV1AuditLogListLimitWithLimitWithPage",
        "parameters" : [ {
          "name" : "limit",
          "in" : "path",
          "description" : "The maximum number of results. Default: 500",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "path",
          "description" : "The page index offset, relative to the limit.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The audit logs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RestAuditLogEntry"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Whenever a non-admin user starts the call",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/time" : {
      "get" : {
        "tags" : [ "Status" ],
        "summary" : "Returns the current time on the server.",
        "operationId" : "getApiV1StatusTime",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrentTime"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/run/info/list" : {
      "get" : {
        "tags" : [ "Client Run Info" ],
        "summary" : "Lists an overview of all competition runs visible to the current client",
        "operationId" : "getApiV1ClientRunInfoList",
        "parameters" : [ {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientRunInfoList"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/run/info/currentTask/{runId}" : {
      "get" : {
        "tags" : [ "Client Run Info" ],
        "summary" : "Returns an overview of the currently active task for a run",
        "operationId" : "getApiV1ClientRunInfoCurrenttaskWithRunid",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "query",
          "description" : "Session Token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientTaskInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/download/run/{runId}" : {
      "get" : {
        "tags" : [ "Download" ],
        "summary" : "Provides a JSON download of the entire competition run structure.",
        "operationId" : "getApiV1DownloadRunWithRunid",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/download/run/{runId}/scores" : {
      "get" : {
        "tags" : [ "Download" ],
        "summary" : "Provides a CSV download with the scores for a given competition run.",
        "operationId" : "getApiV1DownloadRunWithRunidScores",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Competition run ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/download/competition/{competitionId}" : {
      "get" : {
        "tags" : [ "Download" ],
        "summary" : "Provides a JSON download of the entire competition description structure.",
        "operationId" : "getApiV1DownloadCompetitionWithCompetitionid",
        "parameters" : [ {
          "name" : "competitionId",
          "in" : "path",
          "description" : "Competition ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "LoginRequest" : {
        "required" : [ "password", "username" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "UserDetails" : {
        "required" : [ "id", "role", "username" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "ADMIN", "JUDGE", "VIEWER", "PARTICIPANT" ]
          },
          "sessionId" : {
            "type" : "string"
          }
        }
      },
      "ErrorStatus" : {
        "required" : [ "description", "status" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "status" : {
            "type" : "boolean"
          }
        }
      },
      "SuccessStatus" : {
        "required" : [ "description", "status" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "status" : {
            "type" : "boolean"
          }
        }
      },
      "UserRequest" : {
        "required" : [ "username" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "ADMIN", "JUDGE", "VIEWER", "PARTICIPANT" ]
          }
        }
      },
      "SessionId" : {
        "required" : [ "sessionId" ],
        "type" : "object",
        "properties" : {
          "sessionId" : {
            "type" : "string"
          }
        }
      },
      "RestMediaCollection" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "basePath" : {
            "type" : "string"
          }
        }
      },
      "RestFullMediaCollection" : {
        "required" : [ "collection", "items" ],
        "type" : "object",
        "properties" : {
          "collection" : {
            "$ref" : "#/components/schemas/RestMediaCollection"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RestMediaItem"
            }
          }
        }
      },
      "RestMediaItem" : {
        "required" : [ "collectionId", "id", "location", "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "IMAGE", "VIDEO" ]
          },
          "collectionId" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "durationMs" : {
            "type" : "integer",
            "format" : "int64"
          },
          "fps" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "CompetitionOverview" : {
        "required" : [ "description", "id", "name", "taskCount", "teamCount" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "taskCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "teamCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CompetitionCreate" : {
        "required" : [ "description", "name", "participantsCanView" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "participantsCanView" : {
            "type" : "boolean"
          }
        }
      },
      "ConfiguredOptionQueryComponentOption" : {
        "required" : [ "option", "parameters" ],
        "type" : "object",
        "properties" : {
          "option" : {
            "type" : "string",
            "enum" : [ "IMAGE_ITEM", "VIDEO_ITEM_SEGMENT", "TEXT", "EXTERNAL_IMAGE", "EXTERNAL_VIDEO" ]
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ConfiguredOptionScoringOption" : {
        "required" : [ "option", "parameters" ],
        "type" : "object",
        "properties" : {
          "option" : {
            "type" : "string",
            "enum" : [ "KIS", "AVS" ]
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ConfiguredOptionSimpleOption" : {
        "required" : [ "option", "parameters" ],
        "type" : "object",
        "properties" : {
          "option" : {
            "type" : "string",
            "enum" : [ "HIDDEN_RESULTS", "MAP_TO_SEGMENT", "PROLONG_ON_SUBMISSION" ]
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ConfiguredOptionSubmissionFilterOption" : {
        "required" : [ "option", "parameters" ],
        "type" : "object",
        "properties" : {
          "option" : {
            "type" : "string",
            "enum" : [ "NO_DUPLICATES", "LIMIT_CORRECT_PER_TEAM", "LIMIT_WRONG_PER_TEAM", "LIMIT_TOTAL_PER_TEAM", "LIMIT_CORRECT_PER_MEMBER", "TEMPORAL_SUBMISSION", "TEXTUAL_SUBMISSION", "ITEM_SUBMISSION" ]
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ConfiguredOptionTargetOption" : {
        "required" : [ "option", "parameters" ],
        "type" : "object",
        "properties" : {
          "option" : {
            "type" : "string",
            "enum" : [ "SINGLE_MEDIA_ITEM", "SINGLE_MEDIA_SEGMENT", "MULTIPLE_MEDIA_ITEMS", "JUDGEMENT", "VOTE", "TEXT" ]
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "RestCompetitionDescription" : {
        "required" : [ "id", "judges", "name", "participantCanView", "taskGroups", "taskTypes", "tasks", "teamGroups", "teams" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "taskTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskType"
            }
          },
          "taskGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskGroup"
            }
          },
          "tasks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RestTaskDescription"
            }
          },
          "teams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RestTeam"
            }
          },
          "teamGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RestTeamGroup"
            }
          },
          "judges" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "participantCanView" : {
            "type" : "boolean"
          }
        }
      },
      "RestTaskDescription" : {
        "required" : [ "components", "duration", "id", "mediaCollectionId", "name", "target", "taskGroup", "taskType" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "taskGroup" : {
            "type" : "string"
          },
          "taskType" : {
            "type" : "string"
          },
          "duration" : {
            "type" : "integer",
            "format" : "int64"
          },
          "mediaCollectionId" : {
            "type" : "string"
          },
          "target" : {
            "$ref" : "#/components/schemas/RestTaskDescriptionTarget"
          },
          "components" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RestTaskDescriptionComponent"
            }
          }
        }
      },
      "RestTaskDescriptionComponent" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "IMAGE_ITEM", "VIDEO_ITEM_SEGMENT", "TEXT", "EXTERNAL_IMAGE", "EXTERNAL_VIDEO" ]
          },
          "start" : {
            "type" : "integer",
            "format" : "int64"
          },
          "end" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          },
          "dataType" : {
            "type" : "string"
          },
          "mediaItem" : {
            "type" : "string"
          },
          "range" : {
            "$ref" : "#/components/schemas/RestTemporalRange"
          }
        }
      },
      "RestTaskDescriptionTarget" : {
        "required" : [ "mediaItems", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "SINGLE_MEDIA_ITEM", "SINGLE_MEDIA_SEGMENT", "MULTIPLE_MEDIA_ITEMS", "JUDGEMENT", "VOTE", "TEXT" ]
          },
          "mediaItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RestTaskDescriptionTargetItem"
            }
          }
        }
      },
      "RestTaskDescriptionTargetItem" : {
        "required" : [ "mediaItem" ],
        "type" : "object",
        "properties" : {
          "mediaItem" : {
            "type" : "string"
          },
          "temporalRange" : {
            "$ref" : "#/components/schemas/RestTemporalRange"
          }
        }
      },
      "RestTeam" : {
        "required" : [ "color", "name", "users" ],
        "type" : "object",
        "properties" : {
          "uid" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "logoData" : {
            "type" : "string"
          },
          "logoId" : {
            "type" : "string"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RestTeamGroup" : {
        "required" : [ "aggregation", "name", "teams" ],
        "type" : "object",
        "properties" : {
          "uid" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "teams" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "aggregation" : {
            "type" : "string"
          }
        }
      },
      "RestTemporalPoint" : {
        "required" : [ "unit", "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "unit" : {
            "type" : "string",
            "enum" : [ "FRAME_NUMBER", "SECONDS", "MILLISECONDS", "TIMECODE" ]
          }
        }
      },
      "RestTemporalRange" : {
        "required" : [ "end", "start" ],
        "type" : "object",
        "properties" : {
          "start" : {
            "$ref" : "#/components/schemas/RestTemporalPoint"
          },
          "end" : {
            "$ref" : "#/components/schemas/RestTemporalPoint"
          }
        }
      },
      "TaskGroup" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "TaskType" : {
        "required" : [ "components", "filter", "name", "options", "score", "targetType", "taskDuration" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "taskDuration" : {
            "type" : "integer",
            "format" : "int64"
          },
          "targetType" : {
            "$ref" : "#/components/schemas/ConfiguredOptionTargetOption"
          },
          "components" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ConfiguredOptionQueryComponentOption"
            }
          },
          "score" : {
            "$ref" : "#/components/schemas/ConfiguredOptionScoringOption"
          },
          "filter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ConfiguredOptionSubmissionFilterOption"
            }
          },
          "options" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ConfiguredOptionSimpleOption"
            }
          }
        }
      },
      "RestDetailedTeam" : {
        "required" : [ "color", "logoId", "name", "users" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "logoId" : {
            "type" : "string"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserDetails"
            }
          }
        }
      },
      "SuccessfulSubmissionsStatus" : {
        "required" : [ "description", "status", "submission" ],
        "type" : "object",
        "properties" : {
          "submission" : {
            "type" : "string",
            "enum" : [ "CORRECT", "WRONG", "INDETERMINATE", "UNDECIDABLE" ]
          },
          "description" : {
            "type" : "string"
          },
          "status" : {
            "type" : "boolean"
          }
        }
      },
      "QueryEvent" : {
        "required" : [ "category", "timestamp", "type", "value" ],
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "category" : {
            "type" : "string",
            "enum" : [ "TEXT", "IMAGE", "SKETCH", "FILTER", "BROWSING", "COOPERATION", "OTHER" ]
          },
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "QueryEventLog" : {
        "required" : [ "events", "timestamp" ],
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QueryEvent"
            }
          }
        }
      },
      "QueryResult" : {
        "required" : [ "item" ],
        "type" : "object",
        "properties" : {
          "item" : {
            "type" : "string"
          },
          "segment" : {
            "type" : "integer",
            "format" : "int32"
          },
          "frame" : {
            "type" : "integer",
            "format" : "int32"
          },
          "score" : {
            "type" : "number",
            "format" : "double"
          },
          "rank" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "QueryResultLog" : {
        "required" : [ "events", "resultSetAvailability", "results", "sortType", "timestamp" ],
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sortType" : {
            "type" : "string"
          },
          "resultSetAvailability" : {
            "type" : "string"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QueryResult"
            }
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QueryEvent"
            }
          }
        }
      },
      "RunInfo" : {
        "required" : [ "competitionId", "id", "name", "participantsCanView", "tasks", "teams" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "teams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TeamInfo"
            }
          },
          "tasks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskInfo"
            }
          },
          "competitionId" : {
            "type" : "string"
          },
          "participantsCanView" : {
            "type" : "boolean"
          }
        }
      },
      "TaskInfo" : {
        "required" : [ "duration", "id", "name", "taskGroup", "taskType" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "taskGroup" : {
            "type" : "string"
          },
          "taskType" : {
            "type" : "string"
          },
          "duration" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "TeamInfo" : {
        "required" : [ "color", "logoId", "name", "uid" ],
        "type" : "object",
        "properties" : {
          "uid" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "logoId" : {
            "type" : "string"
          }
        }
      },
      "RunState" : {
        "required" : [ "id", "status", "timeElapsed", "timeLeft" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "CREATED", "ACTIVE", "PREPARING_TASK", "RUNNING_TASK", "TASK_ENDED", "TERMINATED" ]
          },
          "currentTask" : {
            "$ref" : "#/components/schemas/TaskInfo"
          },
          "timeLeft" : {
            "type" : "integer",
            "format" : "int64"
          },
          "timeElapsed" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ContentElement" : {
        "required" : [ "contentType", "offset" ],
        "type" : "object",
        "properties" : {
          "contentType" : {
            "type" : "string",
            "enum" : [ "EMPTY", "TEXT", "VIDEO", "IMAGE" ]
          },
          "content" : {
            "type" : "string"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "TaskHint" : {
        "required" : [ "loop", "sequence", "taskId" ],
        "type" : "object",
        "properties" : {
          "taskId" : {
            "type" : "string"
          },
          "sequence" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContentElement"
            }
          },
          "loop" : {
            "type" : "boolean"
          }
        }
      },
      "TaskTarget" : {
        "required" : [ "sequence", "taskId" ],
        "type" : "object",
        "properties" : {
          "taskId" : {
            "type" : "string"
          },
          "sequence" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContentElement"
            }
          }
        }
      },
      "SubmissionInfo" : {
        "required" : [ "memberId", "status", "teamId", "timestamp" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "teamId" : {
            "type" : "string"
          },
          "teamName" : {
            "type" : "string"
          },
          "memberId" : {
            "type" : "string"
          },
          "memberName" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "CORRECT", "WRONG", "INDETERMINATE", "UNDECIDABLE" ]
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "item" : {
            "$ref" : "#/components/schemas/RestMediaItem"
          },
          "text" : {
            "type" : "string"
          },
          "start" : {
            "type" : "integer",
            "format" : "int64"
          },
          "end" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "Score" : {
        "required" : [ "score", "teamId" ],
        "type" : "object",
        "properties" : {
          "teamId" : {
            "type" : "string"
          },
          "score" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "ScoreOverview" : {
        "required" : [ "name", "scores" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "taskGroup" : {
            "type" : "string"
          },
          "scores" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Score"
            }
          }
        }
      },
      "ScoreSeries" : {
        "required" : [ "name", "points", "team" ],
        "type" : "object",
        "properties" : {
          "team" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "points" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScoreSeriesPoint"
            }
          }
        }
      },
      "ScoreSeriesPoint" : {
        "required" : [ "score", "timestamp" ],
        "type" : "object",
        "properties" : {
          "score" : {
            "type" : "number",
            "format" : "double"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "CompetitionStartMessage" : {
        "required" : [ "competitionId", "name", "scoreboards", "type" ],
        "type" : "object",
        "properties" : {
          "competitionId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "SYNCHRONOUS", "ASYNCHRONOUS" ]
          },
          "scoreboards" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ViewerInfo" : {
        "required" : [ "host", "ready", "username", "viewersId" ],
        "type" : "object",
        "properties" : {
          "viewersId" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "host" : {
            "type" : "string"
          },
          "ready" : {
            "type" : "boolean"
          }
        }
      },
      "TaskRunSubmissionInfo" : {
        "required" : [ "submissions", "taskRunId" ],
        "type" : "object",
        "properties" : {
          "taskRunId" : {
            "type" : "string"
          },
          "submissions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubmissionInfo"
            }
          }
        }
      },
      "PastTaskInfo" : {
        "required" : [ "descriptionId", "name", "numberOfSubmissions", "taskGroup", "taskId", "taskType" ],
        "type" : "object",
        "properties" : {
          "taskId" : {
            "type" : "string"
          },
          "descriptionId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "taskGroup" : {
            "type" : "string"
          },
          "taskType" : {
            "type" : "string"
          },
          "numberOfSubmissions" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "JudgementRequest" : {
        "required" : [ "collection", "item", "mediaType", "taskDescription", "token", "validator" ],
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "mediaType" : {
            "type" : "string",
            "enum" : [ "TEXT", "VIDEO", "IMAGE" ]
          },
          "validator" : {
            "type" : "string"
          },
          "collection" : {
            "type" : "string"
          },
          "item" : {
            "type" : "string"
          },
          "taskDescription" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "string"
          },
          "endTime" : {
            "type" : "string"
          }
        }
      },
      "Judgement" : {
        "required" : [ "token", "validator", "verdict" ],
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "validator" : {
            "type" : "string"
          },
          "verdict" : {
            "type" : "string",
            "enum" : [ "CORRECT", "WRONG", "INDETERMINATE", "UNDECIDABLE" ]
          }
        }
      },
      "JudgementValidatorStatus" : {
        "required" : [ "open", "pending", "validator" ],
        "type" : "object",
        "properties" : {
          "validator" : {
            "type" : "string"
          },
          "pending" : {
            "type" : "integer",
            "format" : "int32"
          },
          "open" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "JudgementVote" : {
        "required" : [ "verdict" ],
        "type" : "object",
        "properties" : {
          "verdict" : {
            "type" : "string",
            "enum" : [ "CORRECT", "WRONG", "INDETERMINATE", "UNDECIDABLE" ]
          }
        }
      },
      "AuditLogInfo" : {
        "required" : [ "latest", "size", "timestamp" ],
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "latest" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "RestAuditLogEntry" : {
        "required" : [ "id", "timestamp", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "COMPETITION_START", "COMPETITION_END", "TASK_START", "TASK_MODIFIED", "TASK_END", "SUBMISSION", "PREPARE_JUDGEMENT", "JUDGEMENT", "LOGIN", "LOGOUT", "SUBMISSION_VALIDATION", "SUBMISSION_STATUS_OVERWRITE" ]
          },
          "id" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "RestCompetitionEndAuditLogEntry" : {
        "required" : [ "api", "competition", "id", "timestamp", "type" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RestAuditLogEntry"
        }, {
          "type" : "object",
          "properties" : {
            "competition" : {
              "type" : "string"
            },
            "api" : {
              "type" : "string",
              "enum" : [ "REST", "CLI", "INTERNAL" ]
            },
            "user" : {
              "type" : "string"
            }
          }
        } ]
      },
      "RestCompetitionStartAuditLogEntry" : {
        "required" : [ "api", "competition", "id", "timestamp", "type" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RestAuditLogEntry"
        }, {
          "type" : "object",
          "properties" : {
            "competition" : {
              "type" : "string"
            },
            "api" : {
              "type" : "string",
              "enum" : [ "REST", "CLI", "INTERNAL" ]
            },
            "user" : {
              "type" : "string"
            }
          }
        } ]
      },
      "RestJudgementAuditLogEntry" : {
        "required" : [ "api", "competition", "id", "timestamp", "token", "type", "validator", "verdict" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RestAuditLogEntry"
        }, {
          "type" : "object",
          "properties" : {
            "competition" : {
              "type" : "string"
            },
            "validator" : {
              "type" : "string"
            },
            "token" : {
              "type" : "string"
            },
            "verdict" : {
              "type" : "string",
              "enum" : [ "CORRECT", "WRONG", "INDETERMINATE", "UNDECIDABLE" ]
            },
            "api" : {
              "type" : "string",
              "enum" : [ "REST", "CLI", "INTERNAL" ]
            },
            "user" : {
              "type" : "string"
            }
          }
        } ]
      },
      "RestLoginAuditLogEntry" : {
        "required" : [ "api", "id", "session", "timestamp", "type", "user" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RestAuditLogEntry"
        }, {
          "type" : "object",
          "properties" : {
            "user" : {
              "type" : "string"
            },
            "session" : {
              "type" : "string"
            },
            "api" : {
              "type" : "string",
              "enum" : [ "REST", "CLI", "INTERNAL" ]
            }
          }
        } ]
      },
      "RestLogoutAuditLogEntry" : {
        "required" : [ "api", "id", "session", "timestamp", "type" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RestAuditLogEntry"
        }, {
          "type" : "object",
          "properties" : {
            "session" : {
              "type" : "string"
            },
            "api" : {
              "type" : "string",
              "enum" : [ "REST", "CLI", "INTERNAL" ]
            }
          }
        } ]
      },
      "RestPrepareJudgementAuditLogEntry" : {
        "required" : [ "id", "submission", "timestamp", "token", "type", "validator" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RestAuditLogEntry"
        }, {
          "type" : "object",
          "properties" : {
            "validator" : {
              "type" : "string"
            },
            "token" : {
              "type" : "string"
            },
            "submission" : {
              "$ref" : "#/components/schemas/SubmissionInfo"
            }
          }
        } ]
      },
      "RestSubmissionAuditLogEntry" : {
        "required" : [ "address", "api", "competition", "id", "submission", "taskName", "timestamp", "type" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RestAuditLogEntry"
        }, {
          "type" : "object",
          "properties" : {
            "competition" : {
              "type" : "string"
            },
            "taskName" : {
              "type" : "string"
            },
            "submission" : {
              "$ref" : "#/components/schemas/SubmissionInfo"
            },
            "api" : {
              "type" : "string",
              "enum" : [ "REST", "CLI", "INTERNAL" ]
            },
            "user" : {
              "type" : "string"
            },
            "address" : {
              "type" : "string"
            }
          }
        } ]
      },
      "RestSubmissionStatusOverwriteAuditLogEntry" : {
        "required" : [ "api", "id", "newVerdict", "runId", "session", "submissionId", "timestamp", "type" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RestAuditLogEntry"
        }, {
          "type" : "object",
          "properties" : {
            "runId" : {
              "type" : "string"
            },
            "submissionId" : {
              "type" : "string"
            },
            "newVerdict" : {
              "type" : "string",
              "enum" : [ "CORRECT", "WRONG", "INDETERMINATE", "UNDECIDABLE" ]
            },
            "session" : {
              "type" : "string"
            },
            "api" : {
              "type" : "string",
              "enum" : [ "REST", "CLI", "INTERNAL" ]
            }
          }
        } ]
      },
      "RestSubmissionValidationAuditLogEntry" : {
        "required" : [ "id", "submissionId", "timestamp", "type", "validator", "verdict" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RestAuditLogEntry"
        }, {
          "type" : "object",
          "properties" : {
            "submissionId" : {
              "type" : "string"
            },
            "validator" : {
              "type" : "string"
            },
            "verdict" : {
              "type" : "string",
              "enum" : [ "CORRECT", "WRONG", "INDETERMINATE", "UNDECIDABLE" ]
            }
          }
        } ]
      },
      "RestTaskEndAuditLogEntry" : {
        "required" : [ "api", "competition", "id", "taskName", "timestamp", "type" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RestAuditLogEntry"
        }, {
          "type" : "object",
          "properties" : {
            "competition" : {
              "type" : "string"
            },
            "taskName" : {
              "type" : "string"
            },
            "api" : {
              "type" : "string",
              "enum" : [ "REST", "CLI", "INTERNAL" ]
            },
            "user" : {
              "type" : "string"
            }
          }
        } ]
      },
      "RestTaskModifiedAuditLogEntry" : {
        "required" : [ "api", "competition", "id", "modification", "taskName", "timestamp", "type" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RestAuditLogEntry"
        }, {
          "type" : "object",
          "properties" : {
            "competition" : {
              "type" : "string"
            },
            "taskName" : {
              "type" : "string"
            },
            "modification" : {
              "type" : "string"
            },
            "api" : {
              "type" : "string",
              "enum" : [ "REST", "CLI", "INTERNAL" ]
            },
            "user" : {
              "type" : "string"
            }
          }
        } ]
      },
      "RestTaskStartAuditLogEntry" : {
        "required" : [ "api", "competition", "id", "taskName", "timestamp", "type" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RestAuditLogEntry"
        }, {
          "type" : "object",
          "properties" : {
            "competition" : {
              "type" : "string"
            },
            "taskName" : {
              "type" : "string"
            },
            "api" : {
              "type" : "string",
              "enum" : [ "REST", "CLI", "INTERNAL" ]
            },
            "user" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CurrentTime" : {
        "required" : [ "timeStamp" ],
        "type" : "object",
        "properties" : {
          "timeStamp" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ClientRunInfo" : {
        "required" : [ "id", "name", "status" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "CREATED", "ACTIVE", "PREPARING_TASK", "RUNNING_TASK", "TASK_ENDED", "TERMINATED" ]
          }
        }
      },
      "ClientRunInfoList" : {
        "required" : [ "runs" ],
        "type" : "object",
        "properties" : {
          "runs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClientRunInfo"
            }
          }
        }
      },
      "ClientTaskInfo" : {
        "required" : [ "id", "name", "remainingTime", "running", "taskGroup" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "taskGroup" : {
            "type" : "string"
          },
          "remainingTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "running" : {
            "type" : "boolean"
          }
        }
      }
    }
  }
}