{
  "openapi": "3.0.1",
  "info": {
    "title": "DRES API",
    "description": "API for DRES (Distributed Retrieval Evaluation Server), Version 1.0",
    "version": "1.0"
  },
  "paths": {
    "/api/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Sets roles for session based on user account and returns a session cookie.",
        "operationId": "postApiLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/logout": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Clears all user roles of the current session.",
        "operationId": "getApiLogout",
        "parameters": [
          {
            "name": "session",
            "in": "query",
            "description": "Session Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets details of the user with the given id",
        "operationId": "getApiUserWithUserid",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User's UID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                }
              }
            }
          },
          "404": {
            "description": "If the user could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Deletes the specified user. Requires ADMIN privileges",
        "operationId": "deleteApiUserWithUserid",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                }
              }
            }
          },
          "404": {
            "description": "If the user could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Updates the specified user, if it exists. Anyone is allowed to update their data, however only ADMINs are allowed to update anyone",
        "operationId": "patchApiUserWithUserid",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/session": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get current sessionId",
        "operationId": "getApiUserSession",
        "parameters": [
          {
            "name": "session",
            "in": "query",
            "description": "Session Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionId"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/status/time": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Returns the current time on the server.",
        "operationId": "getApiStatusTime",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentTime"
                }
              }
            }
          }
        }
      }
    },
    "/api/runInfo/list": {
      "get": {
        "tags": [
          "Client Run Info"
        ],
        "summary": "Lists an overview of all competition runs visible to the current client",
        "operationId": "getApiRuninfoList",
        "parameters": [
          {
            "name": "session",
            "in": "query",
            "description": "Session Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientRunInfoList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/runInfo/currentTask/{runId}": {
      "get": {
        "tags": [
          "Client Run Info"
        ],
        "summary": "Returns an overview of the currently active task for a run",
        "operationId": "getApiRuninfoCurrenttaskWithRunid",
        "parameters": [
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "session",
            "in": "query",
            "description": "Session Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientTaskInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/submit": {
      "get": {
        "tags": [
          "Submission"
        ],
        "summary": "Endpoint to accept submissions",
        "operationId": "getSubmit",
        "parameters": [
          {
            "name": "collection",
            "in": "query",
            "description": "Collection identifier. Optional, in which case the default collection for the run will be considered.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "item",
            "in": "query",
            "description": "Identifier for the actual media object or media file.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frame",
            "in": "query",
            "description": "Frame number for media with temporal progression (e.g. video).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "shot",
            "in": "query",
            "description": "Shot number for media with temporal progression (e.g. video).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "description": "Timecode for media with temporal progression (e.g. video).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "session",
            "in": "query",
            "description": "Session Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "208": {
            "description": "208",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/log/query": {
      "post": {
        "tags": [
          "Log"
        ],
        "summary": "Accepts query logs from participants",
        "operationId": "postLogQuery",
        "parameters": [
          {
            "name": "session",
            "in": "query",
            "description": "Session Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryEventLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/log/result": {
      "post": {
        "tags": [
          "Log"
        ],
        "summary": "Accepts result logs from participants",
        "operationId": "postLogResult",
        "parameters": [
          {
            "name": "session",
            "in": "query",
            "description": "Session Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryResultLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginRequest": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserDetails": {
        "required": [
          "id",
          "role",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "JUDGE",
              "VIEWER",
              "PARTICIPANT"
            ]
          },
          "sessionId": {
            "type": "string"
          }
        }
      },
      "ErrorStatus": {
        "required": [
          "description",
          "status"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          }
        }
      },
      "SuccessStatus": {
        "required": [
          "description",
          "status"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          }
        }
      },
      "UserRequest": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "JUDGE",
              "VIEWER",
              "PARTICIPANT"
            ]
          }
        }
      },
      "SessionId": {
        "required": [
          "sessionId"
        ],
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string"
          }
        }
      },
      "CurrentTime": {
        "required": [
          "timeStamp"
        ],
        "type": "object",
        "properties": {
          "timeStamp": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ClientRunInfo": {
        "required": [
          "id",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "ACTIVE",
              "PREPARING_TASK",
              "RUNNING_TASK",
              "TASK_ENDED",
              "TERMINATED"
            ]
          }
        }
      },
      "ClientRunInfoList": {
        "required": [
          "runs"
        ],
        "type": "object",
        "properties": {
          "runs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientRunInfo"
            }
          }
        }
      },
      "ClientTaskInfo": {
        "required": [
          "id",
          "name",
          "remainingTime",
          "running",
          "taskGroup"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "taskGroup": {
            "type": "string"
          },
          "remainingTime": {
            "type": "integer",
            "format": "int64"
          },
          "running": {
            "type": "boolean"
          }
        }
      },
      "QueryEvent": {
        "required": [
          "category",
          "timestamp",
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "type": "string",
            "enum": [
              "TEXT",
              "IMAGE",
              "SKETCH",
              "FILTER",
              "BROWSING",
              "COOPERATION",
              "OTHER"
            ]
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "QueryEventLog": {
        "required": [
          "events",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryEvent"
            }
          }
        }
      },
      "QueryResult": {
        "required": [
          "item"
        ],
        "type": "object",
        "properties": {
          "item": {
            "type": "string"
          },
          "segment": {
            "type": "integer",
            "format": "int32"
          },
          "frame": {
            "type": "integer",
            "format": "int32"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "QueryResultLog": {
        "required": [
          "events",
          "resultSetAvailability",
          "results",
          "sortType",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "sortType": {
            "type": "string"
          },
          "resultSetAvailability": {
            "type": "string"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryResult"
            }
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryEvent"
            }
          }
        }
      }
    }
  }
}